/*-- scss:defaults --*/

// Custom colours and variables

$jet: #131516;
$accent: #107895;
$accent2: #9a2515;
// $accent2: #e64173;
$right-arrow: "\2192"; // Unicode character for right arrow

// colors
.black        { color: #000000 !important; } // black
.white        { color: #FFFFFF !important; } // white
.orange       { color: #E69F00 !important; } // orange
.skyblue      { color: #56B4E9 !important; } // sky blue
.bluishgreen  { color: #009E73 !important; } // bluish green
.yellow       { color: #F0E442 !important; } // yellow
.blue         { color: #0072B2 !important; } // blue
.vermilion    { color: #D55E00 !important; } // vermilion
.purple       { color: #CC79A7 !important; } // reddish purple

// fonts

/*
Note: This theme uses the Roboto font family, which it imports from Google
  Fonts to ensure consistent weighting in addition to availability. While
  you can use a local installation of Roboto, this is generally not 
  recommended since the weighting will likely be wrong (probably too
  light). OTOH, importing from Google Fonts can cause some issues in
  certain secure environments due the external CDN (see:
  https://github.com/grantmcdermott/quarto-revealjs-clean/issues/7). If
  that's the case for you, simply comment out the `@import url(...)` line
  below and it will default for the default Sans Serif font on your system
  (e.g., Helvetica on a Mac). Circling back to the earlier point about
  preserving consistent font weights, you may also wish to remove "Roboto"
  from the choice set if the family is installed locally.
*/
@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap');

$font-family-sans-serif: "Lato", sans-serif !default;
$presentation-heading-font: "Lato", sans-serif !default;

$presentation-heading-color: $jet !default;
//$presentation-heading-line-height: 2;
//$presentation-block-margin: 28px;
$presentation-font-size-root: 30px;

// colors
//$body-bg: #f0f1eb !default;
$body-color: $jet !default;
$link-color: $accent !default;
$selection-bg: #26351c !default;


/*-- scss:rules --*/

.reveal a {
  line-height: 1.5em;
}

.reveal p {
  margin-top: 1.25em;
}

// title and headings

#title-slide {
  text-align: left;
  padding-left: 3em;

  .title {
    color: $body-color;
    font-size: 1.4em;
    font-weight: normal;
    font-variant: small-caps;
  }

  .subtitle {
    color: $accent;
    font-style: italic;
    margin-top: 0em;
  }

  .institute,
  .quarto-title-affiliation,
  .quarto-title-author-email {
    font-style: italic;
    // font-size: 80%;
    // color: #7F7F7F;
  }

  .author,
  .quarto-title-author-name {
    color: $body-color;
    font-style: italic;
  }

  .quarto-title-authors {
    display: flex;
    justify-content: left;

    .quarto-title-author {
      padding-left: 0em;
      padding-right: 0em;
      width: 100%;
    }
  }

}


.reveal h2 {
  font-size: 1.4em;
}

.reveal h3 {
  color: $body-color;
  font-style: italic;
  font-size: 0.95em;
}

.reveal h4 {
  color: $body-color;
  margin-top: 1.25em;
}

// alerts etc.

.alert {
  color: $accent2;
}

.fg {
  color: var(--col, $jet);
}

.bg {
  background-color: var(--col, #fff);
  padding: 0.1em;
  border-radius: 5px;
  display: inline-block;
}

// lists

// Unordered lists

.reveal ul {
  padding-left: 16px;

  li::marker {
    color: mix($accent, white, 70%);
  }
}

.reveal ul ul {
  list-style: none;

  li:before {
    content: $right-arrow;
    color: mix($accent, white, 60%);
    display: inline-block;
    width: 1em;
    margin-left: -1em;
    margin-right: 0.5em;
  }
}

// Ordered lists

.reveal ol {
  padding-left: 16px;

  li::marker {
    color: $accent;
  }
}

// Move "hamburger" menu button to top right

.reveal .slide-menu-button {
  position: fixed;
  top: 6px;
  right: 0;
  display: flex;
  justify-content: flex-end;
  align-items: flex-start;
  pointer-events: none;
}

.reveal .slide-menu-button > * {
  pointer-events: auto;
}

// Same for chalkboard buttons (with an offset)

.reveal .slide-chalkboard-buttons {
  position: fixed;
  top: 12px;
  right: 24px;
  display: flex;
  justify-content: flex-end;
  align-items: flex-start;
  pointer-events: none;
}

.reveal .slide-chalkboard-buttons > * {
  pointer-events: auto;
}

// Logo to the bottom-left
.slide-logo {
  display: block !important;
  position: fixed !important;
  bottom: 0 !important;
  left: 10px !important;
  max-width: 150px; // Adjust if necessary
  max-height: 50px;
  width: auto !important;
  color: $body-color !important;
}

// Also need to enforce slide numbers at bottom-right (if logo is present)
.slide-number, .reveal.has-logo .slide-number {
  bottom: 6px !important;
  right: 10px !important;
  top: unset !important;
  color: #777777 !important;
}

// Beamer-style button link environment

.button {
  display: inline-block;
  padding: 6px 12px;
  margin-bottom: 0;
  font-size: 14px;
  font-weight: 400;
  line-height: 1.42857143;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  background-color: $accent;
  border: 1px solid $accent;
  color: #fff !important;
  text-decoration: none;
  border-radius: 4px;
  transition: all 0.2s ease-in-out;
}

.button:hover {
  background-color: #0056b3;
  border-color: #0056b3;
}

.button::before {
  content: "â–¶";
  margin-right: 5px;
}

// Change the relative widths of `output-location: column`. 
// See: https://github.com/grantmcdermott/quarto-revealjs-clean/pull/16
// Example usage:
// ```{python}
// #| echo: true
// #| output-location: column
// #| classes: columns3070
// <code>
// ```
.reveal .columns3070 > div.column:first-child {
  width: 30%;
}
.reveal .columns3070 div.column:not(:first-child) {
  width: 70%;
}
.reveal .columns7030 > div.column:first-child {
  width: 70%;
}
.reveal .columns7030 div.column:not(:first-child) {
  width: 30%;
}
.reveal .columns4060 > div.column:first-child {
  width: 40%;
}
.reveal .columns4060 div.column:not(:first-child) {
  width: 60%;
}      
.reveal .columns6040 > div.column:first-child {
  width: 60%;
}
.reveal .columns6040 div.column:not(:first-child) {
  width: 40%;
}      

// Make horizontal scroll the default for all code output
.hscroll {
  overflow-x: auto;
  white-space: nowrap;
}

// Apply to all code output by default
.reveal pre,
.reveal code,
.reveal .sourceCode,
.reveal .cell-output,
.reveal .cell-output-stdout,
.reveal .cell-output-display,
.reveal .cell-output-error,
.reveal .hljs {
  overflow-x: auto;
}

// Ensure code blocks maintain their structure
.reveal .sourceCode pre,
.reveal .cell-output pre {
  overflow-x: auto;
  margin: 0;
  padding: 0.5em;
}

// Handle wide tables and code output with scrolling
.reveal .cell-output-display {
  overflow-x: auto;
  max-width: 100%;
}

// Fix pre-formatted text output to prevent wrapping
.reveal .cell-output-stdout pre,
.reveal .cell-output-stdout code {
  white-space: pre;
  overflow-x: auto;
  display: block;
  width: 100%;
  box-sizing: border-box;
  background-color: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 4px;
  padding: 0.5em;
  margin: 0;
}

// Also apply to other code output types
.reveal .cell-output pre,
.reveal .cell-output code {
  background-color: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 4px;
  padding: 0.5em;
  margin: 0;
}

// Inline code styling - subtle earth-tone dark blue
.reveal p code,
.reveal li code,
.reveal td code,
.reveal th code,
.reveal h1 code,
.reveal h2 code,
.reveal h3 code,
.reveal h4 code,
.reveal h5 code,
.reveal h6 code {
  color: #4a5568;
  font-size: 0.9em;
}
